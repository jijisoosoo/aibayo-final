jasypt.encryptor.bean=jasyptStringEncryptor

# ???? ???? ??
spring.profiles.active=secret

server.port=8080

spring.application.name=com.aico.aibayo

spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.web.resources.static-locations=classpath:/static/

# MongoDB ?? ?? ?? (???? ?? ??)
# spring.data.mongodb.uri=mongodb://localhost:27017/mongo_db
# spring.data.mongodb.username=${DB_USERNAME}
# spring.data.mongodb.password=${DB_PASSWORD}

# MySQL ??
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${MYSQL_URL}
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}

spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true

# API Key
api.key=${API_KEY}

# Logging ??
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# JWT ??
jwt.access-token-expiration-minutes=60
spring.jwt.secret=${JWT_SECRET}

# OAuth2 Naver ??
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

# OAuth2 Naver Provider ??
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# OAuth2 Google ??
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email

# ??? ??
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auto=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# ?? ??? ??
file.upload-dir=/aibayo_upload

# ?? ??? ?? ??
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=30MB

# AWS S3 ??
cloud.aws.region.static=ap-northeast-2
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY}
cloud.aws.credentials.secret-key=${AWS_SECRET_KEY}
cloud.aws.s3.bucket=${AWS_S3_BUCKET}


ouath2.domain=